/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "./common";

export declare namespace BumpkinDetails {
  export type BumpkinStruct = {
    tokenId: PromiseOrValue<BigNumberish>;
    tokenURI: PromiseOrValue<string>;
    owner: PromiseOrValue<string>;
    createdAt: PromiseOrValue<BigNumberish>;
    createdBy: PromiseOrValue<string>;
    wallet: PromiseOrValue<string>;
  };

  export type BumpkinStructOutput = [
    BigNumber,
    string,
    string,
    BigNumber,
    string,
    string
  ] & {
    tokenId: BigNumber;
    tokenURI: string;
    owner: string;
    createdAt: BigNumber;
    createdBy: string;
    wallet: string;
  };

  export type DetailsStruct = {
    createdAt: PromiseOrValue<BigNumberish>;
    createdBy: PromiseOrValue<string>;
    wallet: PromiseOrValue<string>;
  };

  export type DetailsStructOutput = [BigNumber, string, string] & {
    createdAt: BigNumber;
    createdBy: string;
    wallet: string;
  };
}

export interface BumpkinDetailsInterface extends utils.Interface {
  functions: {
    "addGameRole(address)": FunctionFragment;
    "gameAddGameRole(address)": FunctionFragment;
    "gameRemoveGameRole(address)": FunctionFragment;
    "gameRoles(address)": FunctionFragment;
    "getBumpkin(uint256)": FunctionFragment;
    "getBumpkinBatch(uint256[])": FunctionFragment;
    "getBumpkinBatchByAddresses(address[])": FunctionFragment;
    "getBumpkinByAddress(address)": FunctionFragment;
    "loadBumpkins(address)": FunctionFragment;
    "loadBumpkinsBatch(address[])": FunctionFragment;
    "owner()": FunctionFragment;
    "removeGameRole(address)": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "updateBumpkinDetails(uint256,(uint256,address,address))": FunctionFragment;
    "updateBumpkinDetailsBatch(uint256[],(uint256,address,address)[])": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "addGameRole"
      | "gameAddGameRole"
      | "gameRemoveGameRole"
      | "gameRoles"
      | "getBumpkin"
      | "getBumpkinBatch"
      | "getBumpkinBatchByAddresses"
      | "getBumpkinByAddress"
      | "loadBumpkins"
      | "loadBumpkinsBatch"
      | "owner"
      | "removeGameRole"
      | "renounceOwnership"
      | "transferOwnership"
      | "updateBumpkinDetails"
      | "updateBumpkinDetailsBatch"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "addGameRole",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "gameAddGameRole",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "gameRemoveGameRole",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "gameRoles",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getBumpkin",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getBumpkinBatch",
    values: [PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getBumpkinBatchByAddresses",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getBumpkinByAddress",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "loadBumpkins",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "loadBumpkinsBatch",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "removeGameRole",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "updateBumpkinDetails",
    values: [PromiseOrValue<BigNumberish>, BumpkinDetails.DetailsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "updateBumpkinDetailsBatch",
    values: [PromiseOrValue<BigNumberish>[], BumpkinDetails.DetailsStruct[]]
  ): string;

  decodeFunctionResult(
    functionFragment: "addGameRole",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "gameAddGameRole",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "gameRemoveGameRole",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "gameRoles", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getBumpkin", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getBumpkinBatch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBumpkinBatchByAddresses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBumpkinByAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "loadBumpkins",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "loadBumpkinsBatch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "removeGameRole",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateBumpkinDetails",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateBumpkinDetailsBatch",
    data: BytesLike
  ): Result;

  events: {
    "OwnershipTransferred(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
}

export interface OwnershipTransferredEventObject {
  previousOwner: string;
  newOwner: string;
}
export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  OwnershipTransferredEventObject
>;

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>;

export interface BumpkinDetails extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: BumpkinDetailsInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addGameRole(
      _game: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    gameAddGameRole(
      _game: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    gameRemoveGameRole(
      _game: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    gameRoles(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    getBumpkin(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BumpkinDetails.BumpkinStructOutput]>;

    getBumpkinBatch(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<[BumpkinDetails.BumpkinStructOutput[]]>;

    getBumpkinBatchByAddresses(
      _bumpkinAddresses: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[BumpkinDetails.BumpkinStructOutput[]]>;

    getBumpkinByAddress(
      _bumpkinAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BumpkinDetails.BumpkinStructOutput]>;

    loadBumpkins(
      _bumpkinOwner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BumpkinDetails.BumpkinStructOutput[]]>;

    loadBumpkinsBatch(
      _bumpkinOwners: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[BumpkinDetails.BumpkinStructOutput[][]]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    removeGameRole(
      _game: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    updateBumpkinDetails(
      _tokenId: PromiseOrValue<BigNumberish>,
      _details: BumpkinDetails.DetailsStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    updateBumpkinDetailsBatch(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      _details: BumpkinDetails.DetailsStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  addGameRole(
    _game: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  gameAddGameRole(
    _game: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  gameRemoveGameRole(
    _game: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  gameRoles(
    arg0: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getBumpkin(
    _tokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BumpkinDetails.BumpkinStructOutput>;

  getBumpkinBatch(
    _tokenIds: PromiseOrValue<BigNumberish>[],
    overrides?: CallOverrides
  ): Promise<BumpkinDetails.BumpkinStructOutput[]>;

  getBumpkinBatchByAddresses(
    _bumpkinAddresses: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<BumpkinDetails.BumpkinStructOutput[]>;

  getBumpkinByAddress(
    _bumpkinAddress: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BumpkinDetails.BumpkinStructOutput>;

  loadBumpkins(
    _bumpkinOwner: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BumpkinDetails.BumpkinStructOutput[]>;

  loadBumpkinsBatch(
    _bumpkinOwners: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<BumpkinDetails.BumpkinStructOutput[][]>;

  owner(overrides?: CallOverrides): Promise<string>;

  removeGameRole(
    _game: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  renounceOwnership(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  updateBumpkinDetails(
    _tokenId: PromiseOrValue<BigNumberish>,
    _details: BumpkinDetails.DetailsStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  updateBumpkinDetailsBatch(
    _tokenIds: PromiseOrValue<BigNumberish>[],
    _details: BumpkinDetails.DetailsStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    addGameRole(
      _game: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    gameAddGameRole(
      _game: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    gameRemoveGameRole(
      _game: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    gameRoles(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getBumpkin(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BumpkinDetails.BumpkinStructOutput>;

    getBumpkinBatch(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<BumpkinDetails.BumpkinStructOutput[]>;

    getBumpkinBatchByAddresses(
      _bumpkinAddresses: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BumpkinDetails.BumpkinStructOutput[]>;

    getBumpkinByAddress(
      _bumpkinAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BumpkinDetails.BumpkinStructOutput>;

    loadBumpkins(
      _bumpkinOwner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BumpkinDetails.BumpkinStructOutput[]>;

    loadBumpkinsBatch(
      _bumpkinOwners: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BumpkinDetails.BumpkinStructOutput[][]>;

    owner(overrides?: CallOverrides): Promise<string>;

    removeGameRole(
      _game: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    updateBumpkinDetails(
      _tokenId: PromiseOrValue<BigNumberish>,
      _details: BumpkinDetails.DetailsStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    updateBumpkinDetailsBatch(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      _details: BumpkinDetails.DetailsStruct[],
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "OwnershipTransferred(address,address)"(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnershipTransferredEventFilter;
  };

  estimateGas: {
    addGameRole(
      _game: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    gameAddGameRole(
      _game: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    gameRemoveGameRole(
      _game: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    gameRoles(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getBumpkin(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getBumpkinBatch(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getBumpkinBatchByAddresses(
      _bumpkinAddresses: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getBumpkinByAddress(
      _bumpkinAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    loadBumpkins(
      _bumpkinOwner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    loadBumpkinsBatch(
      _bumpkinOwners: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    removeGameRole(
      _game: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    updateBumpkinDetails(
      _tokenId: PromiseOrValue<BigNumberish>,
      _details: BumpkinDetails.DetailsStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    updateBumpkinDetailsBatch(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      _details: BumpkinDetails.DetailsStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addGameRole(
      _game: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    gameAddGameRole(
      _game: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    gameRemoveGameRole(
      _game: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    gameRoles(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getBumpkin(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getBumpkinBatch(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getBumpkinBatchByAddresses(
      _bumpkinAddresses: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getBumpkinByAddress(
      _bumpkinAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    loadBumpkins(
      _bumpkinOwner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    loadBumpkinsBatch(
      _bumpkinOwners: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    removeGameRole(
      _game: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    updateBumpkinDetails(
      _tokenId: PromiseOrValue<BigNumberish>,
      _details: BumpkinDetails.DetailsStruct,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    updateBumpkinDetailsBatch(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      _details: BumpkinDetails.DetailsStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
